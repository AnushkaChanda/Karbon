import tkinter as tk
from tkinter import filedialog
from tkhtmlview import HTMLLabel
from tkcode import CodeEditor  # ‚úÖ Syntax highlighting editor
import zipfile
import os




def save_as_html():
    html_code = code_input.get("1.0", tk.END)
    file_path = filedialog.asksaveasfilename(defaultextension=".html", filetypes=[("HTML files", "*.html")])
    if file_path:
        with open(file_path, "w", encoding="utf-8") as f:
            f.write(html_code)

def save_as_zip():
    html_code = code_input.get("1.0", tk.END)
    zip_path = filedialog.asksaveasfilename(defaultextension=".zip", filetypes=[("ZIP files", "*.zip")])
    if zip_path:
        html_filename = "index.html"
        temp_path = os.path.join(os.path.dirname(zip_path), html_filename)
        with open(temp_path, "w", encoding="utf-8") as f:
            f.write(html_code)
        with zipfile.ZipFile(zip_path, 'w') as zipf:
            zipf.write(temp_path, arcname=html_filename)
        os.remove(temp_path)

# ---------------- UI Setup ----------------
root = tk.Tk()
root.title("Karbon Code Editor")
root.geometry("1200x700")

# ---------- Top Save Buttons ----------
button_frame = tk.Frame(root)
button_frame.pack(anchor="nw", padx=10, pady=10)

save_html_btn = tk.Button(button_frame, text="üíæ Save as HTML", command=save_as_html)
save_html_btn.grid(row=0, column=0, padx=5)

save_zip_btn = tk.Button(button_frame, text="üì¶ Save as ZIP", command=save_as_zip)
save_zip_btn.grid(row=0, column=1, padx=5)

def load_ai_code():
    generated_code = """<!DOCTYPE html>
<html>
  <head>
    <title>Generated by AI</title>
    <style>
    </style>
  </head>
  <body>
    <h1>This HTML code was inserted by the AI</h1>
  </body>
</html>"""

    code_input.delete("1.0", tk.END)
    code_input.insert("1.0", generated_code)
    update_preview(None)

    # Auto-save to autosave/index.html
    autosave_path = os.path.join("autosave", "index.html")
    with open(autosave_path, "w", encoding="utf-8") as f:
        f.write(generated_code)


load_ai_btn = tk.Button(button_frame, text="‚ö° Load AI Code", command=load_ai_code)
load_ai_btn.grid(row=0, column=2, padx=5)


# ---------- Main Editor Layout ----------
main_frame = tk.Frame(root)
main_frame.pack(fill=tk.BOTH, expand=True)

# ---------- Code Editor (left) ----------
code_input = CodeEditor(
    main_frame,
    language="html",
    background="black",
    highlighter="dracula",
    font="Courier 12",
    blockcursor=True,
    autofocus=True,
    insertbackground="white"  # Cursor color
)
autosave_path = os.path.join("autosave", "index.html")

if os.path.exists(autosave_path):
    with open(autosave_path, "r", encoding="utf-8") as f:
        last_code = f.read()
else:
    last_code = """<!DOCTYPE html>
<html>
  <head>
    <title>Karbon</title>
    <style>
    </style>
  </head>
  <body>
    <h1>Hello! Welcome to Karbon's live code editor</h1>
  </body>
</html>"""

code_input.insert("1.0", last_code)

code_input.pack(side=tk.LEFT, fill=tk.BOTH, expand=True)

# ---------- Live Preview (right) ----------
preview_frame = tk.Frame(main_frame, bg="white", width=600)
preview_frame.pack(side=tk.RIGHT, fill=tk.BOTH)


HTMLLabel._default_style = ""  # ‚ö†Ô∏è Removes the default injected CSS


def clean_html(raw_html):
    """Removes tkhtmlview's injected default styles if present."""
    unwanted_style = '<style>body { background-color: white; font-family: Courier; }</style>'
    return raw_html.replace(unwanted_style, "")


html_content = HTMLLabel(
    preview_frame,
    html=clean_html(code_input.get("1.0", tk.END)),  # ‚úÖ cleaned HTML
    background="white",
)


html_content.pack(fill=tk.BOTH, expand=True)






def update_preview(event):
    html_content.set_html(clean_html(code_input.get("1.0", tk.END)))



code_input.bind("<KeyRelease>", update_preview)

# ---------- Launch ----------
root.mainloop()
